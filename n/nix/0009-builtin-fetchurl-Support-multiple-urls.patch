From 05f58bf63185aebf42ac8c3d114608543814223b Mon Sep 17 00:00:00 2001
From: "William A. Kennington III" <william@wkennington.com>
Date: Sun, 12 Aug 2018 17:13:24 -0700
Subject: [PATCH 9/9] builtin:fetchurl: Support multiple urls

---
 corepkgs/fetchurl.nix    |  7 +++----
 src/libstore/builtins.cc | 34 +++++++++++++++++++++++++++++++++-
 2 files changed, 36 insertions(+), 5 deletions(-)

diff --git a/corepkgs/fetchurl.nix b/corepkgs/fetchurl.nix
index 0ce1bab1..54620077 100644
--- a/corepkgs/fetchurl.nix
+++ b/corepkgs/fetchurl.nix
@@ -1,5 +1,5 @@
 { system ? "" # obsolete
-, url
+, url ? "", urls ? [ ]
 , md5 ? "", sha1 ? "", sha256 ? "", sha512 ? ""
 , outputHash ?
     if sha512 != "" then sha512 else if sha1 != "" then sha1 else if md5 != "" then md5 else sha256
@@ -17,7 +17,7 @@ derivation {
   inherit outputHashAlgo outputHash;
   outputHashMode = if unpack || executable then "recursive" else "flat";
 
-  inherit name url executable unpack;
+  inherit name executable unpack;
 
   system = "builtin";
 
@@ -32,6 +32,5 @@ derivation {
     "http_proxy" "https_proxy" "ftp_proxy" "all_proxy" "no_proxy"
   ];
 
-  # To make "nix-prefetch-url" work.
-  urls = [ url ];
+  urls = (if (url != "") then [ url ] else [ ]) ++ urls;
 }
diff --git a/src/libstore/builtins.cc b/src/libstore/builtins.cc
index 4f106698..d8807781 100644
--- a/src/libstore/builtins.cc
+++ b/src/libstore/builtins.cc
@@ -49,7 +49,39 @@ void builtinFetchurl(const BasicDerivation & drv, const std::string & netrcData)
                 debug(e.what());
             }
 
-    if (!data) data = fetch(getAttr("url"));
+    if (!data) {
+        std::vector<std::string> urls;
+        auto urli = drv.env.find("url");
+        if (urli != drv.env.end() && urli->second.size() > 0)
+            urls.push_back(urli->second);
+        auto urlsi = drv.env.find("urls");
+        if (urlsi != drv.env.end())
+        {
+            size_t url_begin = 0;
+            while (true)
+            {
+                size_t newline = urlsi->second.find('\n', url_begin);
+                if (newline == std::string::npos)
+                    newline = urlsi->second.size();
+                if (url_begin < newline)
+                    urls.push_back(urlsi->second.substr(url_begin, newline - url_begin));
+                if (newline == urlsi->second.size())
+                    break;
+                url_begin = newline + 1;
+            }
+        }
+
+        for (auto url : urls)
+            try {
+                data = fetch(url);
+                break;
+            } catch (Error & e) {
+                debug(e.what());
+            }
+    }
+
+    if (!data)
+        throw Error("Failed to fetch data, maybe missing URLs.");
 
     Path storePath = getAttr("out");
 
-- 
2.18.0

