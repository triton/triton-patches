From 20603f875679f98c14ab8d7702088585ab759cda Mon Sep 17 00:00:00 2001
From: "William A. Kennington III" <wak@google.com>
Date: Wed, 19 Oct 2016 18:33:20 -0700
Subject: [PATCH 2/2] Fix binary paths

---
 cmd/ztest/ztest.c                       | 13 ++++++-------
 etc/systemd/system/zfs-share.service.in |  2 +-
 lib/libzfs/libzfs_mount.c               |  4 ++--
 module/Makefile.in                      |  2 +-
 4 files changed, 10 insertions(+), 11 deletions(-)

diff --git a/cmd/ztest/ztest.c b/cmd/ztest/ztest.c
index afe6faab0..d0d3d1dbc 100644
--- a/cmd/ztest/ztest.c
+++ b/cmd/ztest/ztest.c
@@ -789,14 +789,14 @@ process_options(int argc, char **argv)
 		 * We want to extract <isa> to determine if we should use
 		 * 32 or 64 bit binaries.
 		 */
-		bin = strstr(cmd, "/usr/bin/");
+		bin = strstr(cmd, "/run/current-system/sw/bin/");
 		ztest = strstr(bin, "/ztest");
 		isa = bin + 9;
 		isalen = ztest - isa;
 		(void) snprintf(zo->zo_alt_ztest, sizeof (zo->zo_alt_ztest),
-		    "%s/usr/bin/%.*s/ztest", realaltdir, isalen, isa);
+		    "%s/run/current-system/sw/bin/%.*s/ztest", realaltdir, isalen, isa);
 		(void) snprintf(zo->zo_alt_libpath, sizeof (zo->zo_alt_libpath),
-		    "%s/usr/lib/%.*s", realaltdir, isalen, isa);
+		    "%s/run/current-system/sw/lib/%.*s", realaltdir, isalen, isa);
 
 		if (0 != access(zo->zo_alt_ztest, X_OK)) {
 			ztest_dump_core = B_FALSE;
@@ -5388,10 +5388,9 @@ ztest_run_zdb(char *pool)
 	zbuf = umem_alloc(1024, UMEM_NOFAIL);
 
 	VERIFY(realpath(getexecname(), bin) != NULL);
-	if (strncmp(bin, "/usr/sbin/ztest", 15) == 0) {
-		strcpy(bin, "/usr/sbin/zdb"); /* Installed */
-	} else if (strncmp(bin, "/sbin/ztest", 11) == 0) {
-		strcpy(bin, "/sbin/zdb"); /* Installed */
+	const char *ztest_bin = "/run/current-system/sw/bin/ztest";
+	if (strncmp(bin, ztest_bin, strlen(ztest_bin)) == 0) {
+		strcpy(bin, "/run/current-system/sw/bin/zdb"); /* Installed */
 	} else {
 		strstr(bin, "/ztest/")[0] = '\0'; /* In-tree */
 		strcat(bin, "/zdb/zdb");
diff --git a/etc/systemd/system/zfs-share.service.in b/etc/systemd/system/zfs-share.service.in
index 688731ea3..cd0efc762 100644
--- a/etc/systemd/system/zfs-share.service.in
+++ b/etc/systemd/system/zfs-share.service.in
@@ -9,7 +9,7 @@ PartOf=smb.service
 [Service]
 Type=oneshot
 RemainAfterExit=yes
-ExecStartPre=-@bindir@/rm -f /etc/dfs/sharetab
+ExecStartPre=-/run/current-system/sw/bin/rm -f /etc/dfs/sharetab
 ExecStart=@sbindir@/zfs share -a
 
 [Install]
diff --git a/lib/libzfs/libzfs_mount.c b/lib/libzfs/libzfs_mount.c
index 4c4f8822c..d608f88e2 100644
--- a/lib/libzfs/libzfs_mount.c
+++ b/lib/libzfs/libzfs_mount.c
@@ -277,7 +277,7 @@ static int
 do_mount(const char *src, const char *mntpt, char *opts)
 {
 	char *argv[8] = {
-	    "/bin/mount",
+	    "/run/current-system/sw/bin/mount",
 	    "-t", MNTTYPE_ZFS,
 	    "-o", opts,
 	    (char *)src,
@@ -313,7 +313,7 @@ do_unmount(const char *mntpt, int flags)
 	char force_opt[] = "-f";
 	char lazy_opt[] = "-l";
 	char *argv[7] = {
-	    "/bin/umount",
+	    "/run/current-system/sw/bin/umount",
 	    "-t", MNTTYPE_ZFS,
 	    NULL, NULL, NULL, NULL };
 	int rc, count = 3;
diff --git a/module/Makefile.in b/module/Makefile.in
index 876c8116d..c153d9526 100644
--- a/module/Makefile.in
+++ b/module/Makefile.in
@@ -67,7 +67,7 @@ modules_uninstall:
 distdir:
 	list='$(subdir-m)'; for subdir in $$list; do \
 		(find @top_srcdir@/module/$$subdir -name '*.c' -o -name '*.h' |\
-		xargs /bin/cp -t $$distdir/$$subdir); \
+		xargs cp -t $$distdir/$$subdir); \
 	done
 
 distclean maintainer-clean: clean
-- 
2.11.0

